/*
 * Workspace API
 * Agent API
 *
 * OpenAPI spec version: 9.0.000.78.3880
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.genesys.internal.workspace.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;

/**
 * MediamediatypeinteractionsidadddocumentData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-09-29T20:42:02.174Z")
public class MediamediatypeinteractionsidadddocumentData {
  @SerializedName("documentId")
  private String documentId = null;

  @SerializedName("size")
  private BigDecimal size = null;

  @SerializedName("mime")
  private String mime = null;

  @SerializedName("name")
  private String name = null;

  public MediamediatypeinteractionsidadddocumentData documentId(String documentId) {
    this.documentId = documentId;
    return this;
  }

   /**
   * The ID of the document.
   * @return documentId
  **/
  @ApiModelProperty(required = true, value = "The ID of the document.")
  public String getDocumentId() {
    return documentId;
  }

  public void setDocumentId(String documentId) {
    this.documentId = documentId;
  }

  public MediamediatypeinteractionsidadddocumentData size(BigDecimal size) {
    this.size = size;
    return this;
  }

   /**
   * The size of the document.
   * @return size
  **/
  @ApiModelProperty(value = "The size of the document.")
  public BigDecimal getSize() {
    return size;
  }

  public void setSize(BigDecimal size) {
    this.size = size;
  }

  public MediamediatypeinteractionsidadddocumentData mime(String mime) {
    this.mime = mime;
    return this;
  }

   /**
   * The mime type of the document.
   * @return mime
  **/
  @ApiModelProperty(value = "The mime type of the document.")
  public String getMime() {
    return mime;
  }

  public void setMime(String mime) {
    this.mime = mime;
  }

  public MediamediatypeinteractionsidadddocumentData name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the document.
   * @return name
  **/
  @ApiModelProperty(value = "The name of the document.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MediamediatypeinteractionsidadddocumentData mediamediatypeinteractionsidadddocumentData = (MediamediatypeinteractionsidadddocumentData) o;
    return Objects.equals(this.documentId, mediamediatypeinteractionsidadddocumentData.documentId) &&
        Objects.equals(this.size, mediamediatypeinteractionsidadddocumentData.size) &&
        Objects.equals(this.mime, mediamediatypeinteractionsidadddocumentData.mime) &&
        Objects.equals(this.name, mediamediatypeinteractionsidadddocumentData.name);
  }

  @Override
  public int hashCode() {
    return Objects.hash(documentId, size, mime, name);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MediamediatypeinteractionsidadddocumentData {\n");
    
    sb.append("    documentId: ").append(toIndentedString(documentId)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    mime: ").append(toIndentedString(mime)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

